- title @geography.name
.row-fluid
  .span8

    %h1
      = @geography.name

    %hr

    :javascript
      var colorHash = ["#A6761D", "#7570B3", "#D95F02", "#66A61E", "#E7298A", "#E6AB02", "#1B9E77"];

    = render :partial => "geography/demographics", :locals => {:geography => @geography }

    = render :partial => "geography/insurance", :locals => {:geography => @geography }

    = render :partial => "geography/providers", :locals => {:geography => @geography}

    = render :partial => "geography/hospital_admissions", :locals => {:geography => @geography}

    - @categories.each do |category|
      = render :partial => "geography/category", :locals => {:category => category, :geography => @geography }

  .span4
    %p.alert.alert-info
      %a{:href => "/place/#{@geography.slug}/resources"} 
        %i.icon-map-marker
        View local resources in #{@geography.name} &raquo;
    .well
      - content_for :javascripts do
        = javascript_include_tag "leaflet"
        = javascript_include_tag "leaflet_lib"

        :javascript
          var geojsonFeature = {
              "type": "Feature",
              "geometry": #{@geography.geometry}
          };

          LeafletLib.initialize("map_detail", { geojson: geojsonFeature }, #{@geography.centroid_as_lat_lng}, 0.2);


      #map_detail
      %br 
      - if @geography.geo_type == 'Community Area' and @adjacent_zips.length > 0
        %p 
          For chronic disease indicators, browse nearby zip codes:
          = raw @adjacent_zips.map{|z| "<a href='/place/#{z.slug}'>#{z.name}</a>"}.join(', ')

      - if @geography.geo_type == 'Zip' and @adjacent_community_areas.length > 0
        %p 
          For other health indicators, browse nearby community areas:
          = raw @adjacent_community_areas.map{|a| "<a href='/place/#{a.slug}'>#{a.name}</a>"}.join(', ')


      %h3 Demographics

      %table.table
        %tr
          %td Population
          %td.nowrap
            2010: #{number_with_delimiter @geography.population(2010)} #{raw @geography.population_change(2000,2010)}
            %br
            2000: #{number_with_delimiter @geography.population(2000)}

        %tr
          %td 
          %td 
            Male: #{@male_percent}%
            %br
            Female: #{@female_percent}%

        - @demographics_list.each do |name|
          - demo = @geography.demographic_by_name(name)
          - unless demo.nil?
            %tr.demo-info{ :rel => "popover", :title => name, :"data-content" => demo.description, :"data-trigger" => 'hover', :"data-html" => 'true', :"data-placement" => 'left' }
              %td
                = name
              %td
                = format_statistic(demo.value, demo.stat_type)

      - if @geography.is_zip
        %p
          These demographics are for <a href='http://en.wikipedia.org/wiki/ZIP_Code_Tabulation_Area'>Zip Code Tabulation Areas</a> (<a href='https://github.com/smartchicago/chicago-atlas/blob/master/db/import/chicago_zctas.geojson'>map</a>) which differ from <a href='http://en.wikipedia.org/wiki/ZIP_code'>US Postal Service zip codes</a> used for mailing (<a href='https://github.com/smartchicago/chicago-atlas/blob/master/db/import/zipcodes.geojson'>map</a>).

      %h3 Conditions
      %ul
        - @categories.each do |category|
          %li
            %a{:href => "##{category.name.parameterize.underscore}"} 
              = category.name
